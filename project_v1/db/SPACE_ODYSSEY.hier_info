|STEM
CLOCK_50 => CLOCK_50.IN3
KEY[0] => resetn.IN3
KEY[1] => load.IN1
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => right.IN1
SW[7] => left.IN1
SW[8] => down.IN1
SW[9] => up.IN1
VGA_CLK <= fill:D1.port11
VGA_HS <= fill:D1.port12
VGA_VS <= fill:D1.port13
VGA_BLANK_N <= fill:D1.port14
VGA_SYNC_N <= fill:D1.port15
VGA_R[0] <= fill:D1.port16
VGA_R[1] <= fill:D1.port16
VGA_R[2] <= fill:D1.port16
VGA_R[3] <= fill:D1.port16
VGA_R[4] <= fill:D1.port16
VGA_R[5] <= fill:D1.port16
VGA_R[6] <= fill:D1.port16
VGA_R[7] <= fill:D1.port16
VGA_R[8] <= fill:D1.port16
VGA_R[9] <= fill:D1.port16
VGA_G[0] <= fill:D1.port17
VGA_G[1] <= fill:D1.port17
VGA_G[2] <= fill:D1.port17
VGA_G[3] <= fill:D1.port17
VGA_G[4] <= fill:D1.port17
VGA_G[5] <= fill:D1.port17
VGA_G[6] <= fill:D1.port17
VGA_G[7] <= fill:D1.port17
VGA_G[8] <= fill:D1.port17
VGA_G[9] <= fill:D1.port17
VGA_B[0] <= fill:D1.port18
VGA_B[1] <= fill:D1.port18
VGA_B[2] <= fill:D1.port18
VGA_B[3] <= fill:D1.port18
VGA_B[4] <= fill:D1.port18
VGA_B[5] <= fill:D1.port18
VGA_B[6] <= fill:D1.port18
VGA_B[7] <= fill:D1.port18
VGA_B[8] <= fill:D1.port18
VGA_B[9] <= fill:D1.port18
HEX0[0] <= hexDisplay:H0.port1
HEX0[1] <= hexDisplay:H0.port1
HEX0[2] <= hexDisplay:H0.port1
HEX0[3] <= hexDisplay:H0.port1
HEX0[4] <= hexDisplay:H0.port1
HEX0[5] <= hexDisplay:H0.port1
HEX0[6] <= hexDisplay:H0.port1
HEX1[0] <= hexDisplay:H1.port1
HEX1[1] <= hexDisplay:H1.port1
HEX1[2] <= hexDisplay:H1.port1
HEX1[3] <= hexDisplay:H1.port1
HEX1[4] <= hexDisplay:H1.port1
HEX1[5] <= hexDisplay:H1.port1
HEX1[6] <= hexDisplay:H1.port1
HEX2[0] <= hexDisplay:H2.port1
HEX2[1] <= hexDisplay:H2.port1
HEX2[2] <= hexDisplay:H2.port1
HEX2[3] <= hexDisplay:H2.port1
HEX2[4] <= hexDisplay:H2.port1
HEX2[5] <= hexDisplay:H2.port1
HEX2[6] <= hexDisplay:H2.port1
HEX3[0] <= hexDisplay:H3.port1
HEX3[1] <= hexDisplay:H3.port1
HEX3[2] <= hexDisplay:H3.port1
HEX3[3] <= hexDisplay:H3.port1
HEX3[4] <= hexDisplay:H3.port1
HEX3[5] <= hexDisplay:H3.port1
HEX3[6] <= hexDisplay:H3.port1
HEX4[0] <= hexDisplay:H4.port1
HEX4[1] <= hexDisplay:H4.port1
HEX4[2] <= hexDisplay:H4.port1
HEX4[3] <= hexDisplay:H4.port1
HEX4[4] <= hexDisplay:H4.port1
HEX4[5] <= hexDisplay:H4.port1
HEX4[6] <= hexDisplay:H4.port1


|STEM|control_top:c2
clk => ecount[0].CLK
clk => ecount[1].CLK
clk => ecount[2].CLK
clk => ecount[3].CLK
clk => ecount[4].CLK
clk => ecount[5].CLK
clk => ecount[6].CLK
clk => ecount[7].CLK
clk => ecount[8].CLK
clk => ecount[9].CLK
clk => ecount[10].CLK
clk => ecount[11].CLK
clk => ecount[12].CLK
clk => ecount[13].CLK
clk => ecount[14].CLK
clk => ecount[15].CLK
clk => ecount[16].CLK
clk => ecount[17].CLK
clk => ecount[18].CLK
clk => ecount[19].CLK
clk => ecount[20].CLK
clk => ecount[21].CLK
clk => ecount[22].CLK
clk => ecount[23].CLK
clk => ecount[24].CLK
clk => ecount[25].CLK
clk => ecount[26].CLK
clk => ecount[27].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => current_state[0].CLK
clk => current_state[1].CLK
clk => current_state[2].CLK
clk => current_state[3].CLK
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
resetn => ecount.OUTPUTSELECT
load => Mux3.IN15
iDD => Mux2.IN13
iDD => Mux2.IN14
iDD => Mux3.IN13
iDD => Mux3.IN14
iDE => Mux2.IN15
iDE => Mux3.IN12
up => next_state.IN0
up => move_down.OUTPUTSELECT
up => move_left.OUTPUTSELECT
up => move_right.OUTPUTSELECT
up => move_up.DATAB
down => next_state.IN1
down => move_left.OUTPUTSELECT
down => move_right.OUTPUTSELECT
down => move_down.DATAA
left => next_state.IN1
left => move_right.OUTPUTSELECT
left => move_left.DATAA
right => next_state.IN1
right => move_right.DATAA
oSD <= oSD.DB_MAX_OUTPUT_PORT_TYPE
oSE <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
enable_x <= <GND>
enable_y <= <GND>
ld_color <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
erase <= <GND>
go <= <GND>
move_up <= move_up.DB_MAX_OUTPUT_PORT_TYPE
move_down <= move_down.DB_MAX_OUTPUT_PORT_TYPE
move_left <= move_left.DB_MAX_OUTPUT_PORT_TYPE
move_right <= move_right.DB_MAX_OUTPUT_PORT_TYPE
state[0] <= current_state[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] <= current_state[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] <= current_state[2].DB_MAX_OUTPUT_PORT_TYPE
state[3] <= current_state[3].DB_MAX_OUTPUT_PORT_TYPE


|STEM|datapath_top:d2
clk => y_final[0]~reg0.CLK
clk => y_final[1]~reg0.CLK
clk => y_final[2]~reg0.CLK
clk => y_final[3]~reg0.CLK
clk => y_final[4]~reg0.CLK
clk => y_final[5]~reg0.CLK
clk => y_final[6]~reg0.CLK
clk => x_final[0]~reg0.CLK
clk => x_final[1]~reg0.CLK
clk => x_final[2]~reg0.CLK
clk => x_final[3]~reg0.CLK
clk => x_final[4]~reg0.CLK
clk => x_final[5]~reg0.CLK
clk => x_final[6]~reg0.CLK
clk => x_final[7]~reg0.CLK
clk => color[0]~reg0.CLK
clk => color[1]~reg0.CLK
clk => color[2]~reg0.CLK
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
data_in[0] => color[0]~reg0.DATAIN
data_in[1] => color[1]~reg0.DATAIN
data_in[2] => color[2]~reg0.DATAIN
enable_x => ~NO_FANOUT~
enable_y => ~NO_FANOUT~
ld_color => color[0]~reg0.ENA
ld_color => color[1]~reg0.ENA
ld_color => color[2]~reg0.ENA
move_up => y_final.OUTPUTSELECT
move_up => y_final.OUTPUTSELECT
move_up => y_final.OUTPUTSELECT
move_up => y_final.OUTPUTSELECT
move_up => y_final.OUTPUTSELECT
move_up => y_final.OUTPUTSELECT
move_up => y_final.OUTPUTSELECT
move_down => y_final.OUTPUTSELECT
move_down => y_final.OUTPUTSELECT
move_down => y_final.OUTPUTSELECT
move_down => y_final.OUTPUTSELECT
move_down => y_final.OUTPUTSELECT
move_down => y_final.OUTPUTSELECT
move_down => y_final.OUTPUTSELECT
move_left => x_final.OUTPUTSELECT
move_left => x_final.OUTPUTSELECT
move_left => x_final.OUTPUTSELECT
move_left => x_final.OUTPUTSELECT
move_left => x_final.OUTPUTSELECT
move_left => x_final.OUTPUTSELECT
move_left => x_final.OUTPUTSELECT
move_left => x_final.OUTPUTSELECT
move_right => x_final.OUTPUTSELECT
move_right => x_final.OUTPUTSELECT
move_right => x_final.OUTPUTSELECT
move_right => x_final.OUTPUTSELECT
move_right => x_final.OUTPUTSELECT
move_right => x_final.OUTPUTSELECT
move_right => x_final.OUTPUTSELECT
move_right => x_final.OUTPUTSELECT
x_final[0] <= x_final[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[1] <= x_final[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[2] <= x_final[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[3] <= x_final[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[4] <= x_final[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[5] <= x_final[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[6] <= x_final[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[7] <= x_final[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[0] <= y_final[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[1] <= y_final[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[2] <= y_final[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[3] <= y_final[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[4] <= y_final[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[5] <= y_final[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[6] <= y_final[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[0] <= color[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[1] <= color[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[2] <= color[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|STEM|fill:D1
CLOCK_50 => CLOCK_50.IN3
x_input[0] => x_input[0].IN1
x_input[1] => x_input[1].IN1
x_input[2] => x_input[2].IN1
x_input[3] => x_input[3].IN1
x_input[4] => x_input[4].IN1
x_input[5] => x_input[5].IN1
x_input[6] => x_input[6].IN1
x_input[7] => x_input[7].IN1
y_input[0] => y_input[0].IN1
y_input[1] => y_input[1].IN1
y_input[2] => y_input[2].IN1
y_input[3] => y_input[3].IN1
y_input[4] => y_input[4].IN1
y_input[5] => y_input[5].IN1
y_input[6] => y_input[6].IN1
color_input[0] => color_input[0].IN1
color_input[1] => color_input[1].IN1
color_input[2] => color_input[2].IN1
resetn => resetn.IN3
go => go.IN1
clear => clear.IN1
iSD => iSD.IN1
iSE => iSE.IN1
oDD <= control:c1.port6
oDE <= control:c1.port7
VGA_CLK <= vga_adapter:VGA.VGA_CLK
VGA_HS <= vga_adapter:VGA.VGA_HS
VGA_VS <= vga_adapter:VGA.VGA_VS
VGA_BLANK_N <= vga_adapter:VGA.VGA_BLANK
VGA_SYNC_N <= vga_adapter:VGA.VGA_SYNC
VGA_R[0] <= vga_adapter:VGA.VGA_R
VGA_R[1] <= vga_adapter:VGA.VGA_R
VGA_R[2] <= vga_adapter:VGA.VGA_R
VGA_R[3] <= vga_adapter:VGA.VGA_R
VGA_R[4] <= vga_adapter:VGA.VGA_R
VGA_R[5] <= vga_adapter:VGA.VGA_R
VGA_R[6] <= vga_adapter:VGA.VGA_R
VGA_R[7] <= vga_adapter:VGA.VGA_R
VGA_R[8] <= vga_adapter:VGA.VGA_R
VGA_R[9] <= vga_adapter:VGA.VGA_R
VGA_G[0] <= vga_adapter:VGA.VGA_G
VGA_G[1] <= vga_adapter:VGA.VGA_G
VGA_G[2] <= vga_adapter:VGA.VGA_G
VGA_G[3] <= vga_adapter:VGA.VGA_G
VGA_G[4] <= vga_adapter:VGA.VGA_G
VGA_G[5] <= vga_adapter:VGA.VGA_G
VGA_G[6] <= vga_adapter:VGA.VGA_G
VGA_G[7] <= vga_adapter:VGA.VGA_G
VGA_G[8] <= vga_adapter:VGA.VGA_G
VGA_G[9] <= vga_adapter:VGA.VGA_G
VGA_B[0] <= vga_adapter:VGA.VGA_B
VGA_B[1] <= vga_adapter:VGA.VGA_B
VGA_B[2] <= vga_adapter:VGA.VGA_B
VGA_B[3] <= vga_adapter:VGA.VGA_B
VGA_B[4] <= vga_adapter:VGA.VGA_B
VGA_B[5] <= vga_adapter:VGA.VGA_B
VGA_B[6] <= vga_adapter:VGA.VGA_B
VGA_B[7] <= vga_adapter:VGA.VGA_B
VGA_B[8] <= vga_adapter:VGA.VGA_B
VGA_B[9] <= vga_adapter:VGA.VGA_B


|STEM|fill:D1|control:c1
clk => black_count[0].CLK
clk => black_count[1].CLK
clk => black_count[2].CLK
clk => black_count[3].CLK
clk => black_count[4].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => current_state~1.DATAIN
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
go => ~NO_FANOUT~
clear => ~NO_FANOUT~
iSD => next_state.S_FinishErase.IN0
iSD => next_state.S_PLOT.DATAA
iSD => Selector2.IN4
iSD => always0.IN0
iSD => next_state.S_ERASE.DATAA
iSD => Selector8.IN1
iSE => next_state.S_FinishErase.IN1
iSE => Selector0.IN4
iSE => always0.IN1
iSE => Selector8.IN2
oDD <= oDD.DB_MAX_OUTPUT_PORT_TYPE
oDE <= oDE.DB_MAX_OUTPUT_PORT_TYPE
ld_x <= ld_y.DB_MAX_OUTPUT_PORT_TYPE
ld_y <= ld_y.DB_MAX_OUTPUT_PORT_TYPE
count_enable <= count_enable.DB_MAX_OUTPUT_PORT_TYPE
black_enable <= black_enable.DB_MAX_OUTPUT_PORT_TYPE
plot <= plot.DB_MAX_OUTPUT_PORT_TYPE


|STEM|fill:D1|datapath:d1
clk => y_final[0]~reg0.CLK
clk => y_final[1]~reg0.CLK
clk => y_final[2]~reg0.CLK
clk => y_final[3]~reg0.CLK
clk => y_final[4]~reg0.CLK
clk => y_final[5]~reg0.CLK
clk => y_final[6]~reg0.CLK
clk => x_final[0]~reg0.CLK
clk => x_final[1]~reg0.CLK
clk => x_final[2]~reg0.CLK
clk => x_final[3]~reg0.CLK
clk => x_final[4]~reg0.CLK
clk => x_final[5]~reg0.CLK
clk => x_final[6]~reg0.CLK
clk => x_final[7]~reg0.CLK
clk => black_count[0].CLK
clk => black_count[1].CLK
clk => black_count[2].CLK
clk => black_count[3].CLK
clk => black_first.CLK
clk => first.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => color[0]~reg0.CLK
clk => color[1]~reg0.CLK
clk => color[2]~reg0.CLK
clk => y_start[0].CLK
clk => y_start[1].CLK
clk => y_start[2].CLK
clk => y_start[3].CLK
clk => y_start[4].CLK
clk => y_start[5].CLK
clk => y_start[6].CLK
clk => x_start[0].CLK
clk => x_start[1].CLK
clk => x_start[2].CLK
clk => x_start[3].CLK
clk => x_start[4].CLK
clk => x_start[5].CLK
clk => x_start[6].CLK
clk => x_start[7].CLK
resetn => x_start.OUTPUTSELECT
resetn => x_start.OUTPUTSELECT
resetn => x_start.OUTPUTSELECT
resetn => x_start.OUTPUTSELECT
resetn => x_start.OUTPUTSELECT
resetn => x_start.OUTPUTSELECT
resetn => x_start.OUTPUTSELECT
resetn => x_start.OUTPUTSELECT
resetn => y_start.OUTPUTSELECT
resetn => y_start.OUTPUTSELECT
resetn => y_start.OUTPUTSELECT
resetn => y_start.OUTPUTSELECT
resetn => y_start.OUTPUTSELECT
resetn => y_start.OUTPUTSELECT
resetn => y_start.OUTPUTSELECT
resetn => color.OUTPUTSELECT
resetn => color.OUTPUTSELECT
resetn => color.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => x_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => y_final.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => black_first.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
resetn => black_count.OUTPUTSELECT
resetn => first.DATAIN
X[0] => x_start.DATAB
X[1] => x_start.DATAB
X[2] => x_start.DATAB
X[3] => x_start.DATAB
X[4] => x_start.DATAB
X[5] => x_start.DATAB
X[6] => x_start.DATAB
X[7] => x_start.DATAB
Y[0] => y_start.DATAB
Y[1] => y_start.DATAB
Y[2] => y_start.DATAB
Y[3] => y_start.DATAB
Y[4] => y_start.DATAB
Y[5] => y_start.DATAB
Y[6] => y_start.DATAB
color_input[0] => color.DATAB
color_input[1] => color.DATAB
color_input[2] => color.DATAB
ld_x => x_start.OUTPUTSELECT
ld_x => x_start.OUTPUTSELECT
ld_x => x_start.OUTPUTSELECT
ld_x => x_start.OUTPUTSELECT
ld_x => x_start.OUTPUTSELECT
ld_x => x_start.OUTPUTSELECT
ld_x => x_start.OUTPUTSELECT
ld_x => x_start.OUTPUTSELECT
ld_y => y_start.OUTPUTSELECT
ld_y => y_start.OUTPUTSELECT
ld_y => y_start.OUTPUTSELECT
ld_y => y_start.OUTPUTSELECT
ld_y => y_start.OUTPUTSELECT
ld_y => y_start.OUTPUTSELECT
ld_y => y_start.OUTPUTSELECT
count_enable => color.OUTPUTSELECT
count_enable => color.OUTPUTSELECT
count_enable => color.OUTPUTSELECT
count_enable => x_start.OUTPUTSELECT
count_enable => x_start.OUTPUTSELECT
count_enable => x_start.OUTPUTSELECT
count_enable => x_start.OUTPUTSELECT
count_enable => x_start.OUTPUTSELECT
count_enable => x_start.OUTPUTSELECT
count_enable => x_start.OUTPUTSELECT
count_enable => x_start.OUTPUTSELECT
count_enable => y_start.OUTPUTSELECT
count_enable => y_start.OUTPUTSELECT
count_enable => y_start.OUTPUTSELECT
count_enable => y_start.OUTPUTSELECT
count_enable => y_start.OUTPUTSELECT
count_enable => y_start.OUTPUTSELECT
count_enable => y_start.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
count_enable => count.OUTPUTSELECT
count_enable => black_count.OUTPUTSELECT
count_enable => black_count.OUTPUTSELECT
count_enable => black_count.OUTPUTSELECT
count_enable => black_count.OUTPUTSELECT
count_enable => black_first.OUTPUTSELECT
count_enable => x_final.OUTPUTSELECT
count_enable => x_final.OUTPUTSELECT
count_enable => x_final.OUTPUTSELECT
count_enable => x_final.OUTPUTSELECT
count_enable => x_final.OUTPUTSELECT
count_enable => x_final.OUTPUTSELECT
count_enable => x_final.OUTPUTSELECT
count_enable => x_final.OUTPUTSELECT
count_enable => y_final.OUTPUTSELECT
count_enable => y_final.OUTPUTSELECT
count_enable => y_final.OUTPUTSELECT
count_enable => y_final.OUTPUTSELECT
count_enable => y_final.OUTPUTSELECT
count_enable => y_final.OUTPUTSELECT
count_enable => y_final.OUTPUTSELECT
black_enable => color.OUTPUTSELECT
black_enable => color.OUTPUTSELECT
black_enable => color.OUTPUTSELECT
black_enable => x_start.OUTPUTSELECT
black_enable => x_start.OUTPUTSELECT
black_enable => x_start.OUTPUTSELECT
black_enable => x_start.OUTPUTSELECT
black_enable => x_start.OUTPUTSELECT
black_enable => x_start.OUTPUTSELECT
black_enable => x_start.OUTPUTSELECT
black_enable => x_start.OUTPUTSELECT
black_enable => y_start.OUTPUTSELECT
black_enable => y_start.OUTPUTSELECT
black_enable => y_start.OUTPUTSELECT
black_enable => y_start.OUTPUTSELECT
black_enable => y_start.OUTPUTSELECT
black_enable => y_start.OUTPUTSELECT
black_enable => y_start.OUTPUTSELECT
black_enable => black_count.OUTPUTSELECT
black_enable => black_count.OUTPUTSELECT
black_enable => black_count.OUTPUTSELECT
black_enable => black_count.OUTPUTSELECT
black_enable => x_final.OUTPUTSELECT
black_enable => x_final.OUTPUTSELECT
black_enable => x_final.OUTPUTSELECT
black_enable => x_final.OUTPUTSELECT
black_enable => x_final.OUTPUTSELECT
black_enable => x_final.OUTPUTSELECT
black_enable => x_final.OUTPUTSELECT
black_enable => x_final.OUTPUTSELECT
black_enable => y_final.OUTPUTSELECT
black_enable => y_final.OUTPUTSELECT
black_enable => y_final.OUTPUTSELECT
black_enable => y_final.OUTPUTSELECT
black_enable => y_final.OUTPUTSELECT
black_enable => y_final.OUTPUTSELECT
black_enable => y_final.OUTPUTSELECT
color[0] <= color[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[1] <= color[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
color[2] <= color[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[0] <= x_final[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[1] <= x_final[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[2] <= x_final[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[3] <= x_final[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[4] <= x_final[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[5] <= x_final[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[6] <= x_final[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
x_final[7] <= x_final[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[0] <= y_final[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[1] <= y_final[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[2] <= y_final[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[3] <= y_final[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[4] <= y_final[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[5] <= y_final[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_final[6] <= y_final[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|STEM|fill:D1|vga_adapter:VGA
resetn => resetn.IN1
clock => clock.IN2
colour[0] => colour[0].IN1
colour[1] => colour[1].IN1
colour[2] => colour[2].IN1
x[0] => x[0].IN1
x[1] => x[1].IN1
x[2] => x[2].IN1
x[3] => x[3].IN1
x[4] => x[4].IN1
x[5] => x[5].IN1
x[6] => x[6].IN1
x[7] => x[7].IN1
y[0] => y[0].IN1
y[1] => y[1].IN1
y[2] => y[2].IN1
y[3] => y[3].IN1
y[4] => y[4].IN1
y[5] => y[5].IN1
y[6] => y[6].IN1
plot => writeEn.IN1
VGA_R[0] <= vga_controller:controller.VGA_R
VGA_R[1] <= vga_controller:controller.VGA_R
VGA_R[2] <= vga_controller:controller.VGA_R
VGA_R[3] <= vga_controller:controller.VGA_R
VGA_R[4] <= vga_controller:controller.VGA_R
VGA_R[5] <= vga_controller:controller.VGA_R
VGA_R[6] <= vga_controller:controller.VGA_R
VGA_R[7] <= vga_controller:controller.VGA_R
VGA_R[8] <= vga_controller:controller.VGA_R
VGA_R[9] <= vga_controller:controller.VGA_R
VGA_G[0] <= vga_controller:controller.VGA_G
VGA_G[1] <= vga_controller:controller.VGA_G
VGA_G[2] <= vga_controller:controller.VGA_G
VGA_G[3] <= vga_controller:controller.VGA_G
VGA_G[4] <= vga_controller:controller.VGA_G
VGA_G[5] <= vga_controller:controller.VGA_G
VGA_G[6] <= vga_controller:controller.VGA_G
VGA_G[7] <= vga_controller:controller.VGA_G
VGA_G[8] <= vga_controller:controller.VGA_G
VGA_G[9] <= vga_controller:controller.VGA_G
VGA_B[0] <= vga_controller:controller.VGA_B
VGA_B[1] <= vga_controller:controller.VGA_B
VGA_B[2] <= vga_controller:controller.VGA_B
VGA_B[3] <= vga_controller:controller.VGA_B
VGA_B[4] <= vga_controller:controller.VGA_B
VGA_B[5] <= vga_controller:controller.VGA_B
VGA_B[6] <= vga_controller:controller.VGA_B
VGA_B[7] <= vga_controller:controller.VGA_B
VGA_B[8] <= vga_controller:controller.VGA_B
VGA_B[9] <= vga_controller:controller.VGA_B
VGA_HS <= vga_controller:controller.VGA_HS
VGA_VS <= vga_controller:controller.VGA_VS
VGA_BLANK <= vga_controller:controller.VGA_BLANK
VGA_SYNC <= vga_controller:controller.VGA_SYNC
VGA_CLK <= vga_controller:controller.VGA_CLK


|STEM|fill:D1|vga_adapter:VGA|vga_address_translator:user_input_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|STEM|fill:D1|vga_adapter:VGA|altsyncram:VideoMemory
wren_a => altsyncram_m6m1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_m6m1:auto_generated.data_a[0]
data_a[1] => altsyncram_m6m1:auto_generated.data_a[1]
data_a[2] => altsyncram_m6m1:auto_generated.data_a[2]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
address_a[0] => altsyncram_m6m1:auto_generated.address_a[0]
address_a[1] => altsyncram_m6m1:auto_generated.address_a[1]
address_a[2] => altsyncram_m6m1:auto_generated.address_a[2]
address_a[3] => altsyncram_m6m1:auto_generated.address_a[3]
address_a[4] => altsyncram_m6m1:auto_generated.address_a[4]
address_a[5] => altsyncram_m6m1:auto_generated.address_a[5]
address_a[6] => altsyncram_m6m1:auto_generated.address_a[6]
address_a[7] => altsyncram_m6m1:auto_generated.address_a[7]
address_a[8] => altsyncram_m6m1:auto_generated.address_a[8]
address_a[9] => altsyncram_m6m1:auto_generated.address_a[9]
address_a[10] => altsyncram_m6m1:auto_generated.address_a[10]
address_a[11] => altsyncram_m6m1:auto_generated.address_a[11]
address_a[12] => altsyncram_m6m1:auto_generated.address_a[12]
address_a[13] => altsyncram_m6m1:auto_generated.address_a[13]
address_a[14] => altsyncram_m6m1:auto_generated.address_a[14]
address_b[0] => altsyncram_m6m1:auto_generated.address_b[0]
address_b[1] => altsyncram_m6m1:auto_generated.address_b[1]
address_b[2] => altsyncram_m6m1:auto_generated.address_b[2]
address_b[3] => altsyncram_m6m1:auto_generated.address_b[3]
address_b[4] => altsyncram_m6m1:auto_generated.address_b[4]
address_b[5] => altsyncram_m6m1:auto_generated.address_b[5]
address_b[6] => altsyncram_m6m1:auto_generated.address_b[6]
address_b[7] => altsyncram_m6m1:auto_generated.address_b[7]
address_b[8] => altsyncram_m6m1:auto_generated.address_b[8]
address_b[9] => altsyncram_m6m1:auto_generated.address_b[9]
address_b[10] => altsyncram_m6m1:auto_generated.address_b[10]
address_b[11] => altsyncram_m6m1:auto_generated.address_b[11]
address_b[12] => altsyncram_m6m1:auto_generated.address_b[12]
address_b[13] => altsyncram_m6m1:auto_generated.address_b[13]
address_b[14] => altsyncram_m6m1:auto_generated.address_b[14]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_m6m1:auto_generated.clock0
clock1 => altsyncram_m6m1:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_b[0] <= altsyncram_m6m1:auto_generated.q_b[0]
q_b[1] <= altsyncram_m6m1:auto_generated.q_b[1]
q_b[2] <= altsyncram_m6m1:auto_generated.q_b[2]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|STEM|fill:D1|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[13] => decode_7la:decode2.data[0]
address_a[13] => decode_7la:wren_decode_a.data[0]
address_a[14] => decode_7la:decode2.data[1]
address_a[14] => decode_7la:wren_decode_a.data[1]
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[6] => ram_block1a8.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[7] => ram_block1a8.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
address_b[8] => ram_block1a8.PORTBADDR8
address_b[9] => ram_block1a0.PORTBADDR9
address_b[9] => ram_block1a1.PORTBADDR9
address_b[9] => ram_block1a2.PORTBADDR9
address_b[9] => ram_block1a3.PORTBADDR9
address_b[9] => ram_block1a4.PORTBADDR9
address_b[9] => ram_block1a5.PORTBADDR9
address_b[9] => ram_block1a6.PORTBADDR9
address_b[9] => ram_block1a7.PORTBADDR9
address_b[9] => ram_block1a8.PORTBADDR9
address_b[10] => ram_block1a0.PORTBADDR10
address_b[10] => ram_block1a1.PORTBADDR10
address_b[10] => ram_block1a2.PORTBADDR10
address_b[10] => ram_block1a3.PORTBADDR10
address_b[10] => ram_block1a4.PORTBADDR10
address_b[10] => ram_block1a5.PORTBADDR10
address_b[10] => ram_block1a6.PORTBADDR10
address_b[10] => ram_block1a7.PORTBADDR10
address_b[10] => ram_block1a8.PORTBADDR10
address_b[11] => ram_block1a0.PORTBADDR11
address_b[11] => ram_block1a1.PORTBADDR11
address_b[11] => ram_block1a2.PORTBADDR11
address_b[11] => ram_block1a3.PORTBADDR11
address_b[11] => ram_block1a4.PORTBADDR11
address_b[11] => ram_block1a5.PORTBADDR11
address_b[11] => ram_block1a6.PORTBADDR11
address_b[11] => ram_block1a7.PORTBADDR11
address_b[11] => ram_block1a8.PORTBADDR11
address_b[12] => ram_block1a0.PORTBADDR12
address_b[12] => ram_block1a1.PORTBADDR12
address_b[12] => ram_block1a2.PORTBADDR12
address_b[12] => ram_block1a3.PORTBADDR12
address_b[12] => ram_block1a4.PORTBADDR12
address_b[12] => ram_block1a5.PORTBADDR12
address_b[13] => address_reg_b[0].DATAIN
address_b[13] => decode_01a:rden_decode_b.data[0]
address_b[14] => address_reg_b[1].DATAIN
address_b[14] => decode_01a:rden_decode_b.data[1]
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => address_reg_b[1].CLK
clock1 => address_reg_b[0].CLK
clock1 => out_address_reg_b[1].CLK
clock1 => out_address_reg_b[0].CLK
data_a[0] => ram_block1a0.PORTADATAIN
data_a[0] => ram_block1a3.PORTADATAIN
data_a[0] => ram_block1a6.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[1] => ram_block1a4.PORTADATAIN
data_a[1] => ram_block1a7.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[2] => ram_block1a5.PORTADATAIN
data_a[2] => ram_block1a8.PORTADATAIN
q_b[0] <= mux_ifb:mux3.result[0]
q_b[1] <= mux_ifb:mux3.result[1]
q_b[2] <= mux_ifb:mux3.result[2]
wren_a => decode_7la:decode2.enable
wren_a => decode_7la:wren_decode_a.enable


|STEM|fill:D1|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:decode2
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|STEM|fill:D1|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_01a:rden_decode_b
data[0] => w_anode143w[1].IN0
data[0] => w_anode157w[1].IN1
data[0] => w_anode166w[1].IN0
data[0] => w_anode175w[1].IN1
data[1] => w_anode143w[2].IN0
data[1] => w_anode157w[2].IN0
data[1] => w_anode166w[2].IN1
data[1] => w_anode175w[2].IN1
eq[0] <= w_anode143w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode157w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode166w[2].DB_MAX_OUTPUT_PORT_TYPE


|STEM|fill:D1|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|decode_7la:wren_decode_a
data[0] => w_anode105w[1].IN0
data[0] => w_anode118w[1].IN1
data[0] => w_anode126w[1].IN0
data[0] => w_anode134w[1].IN1
data[1] => w_anode105w[2].IN0
data[1] => w_anode118w[2].IN0
data[1] => w_anode126w[2].IN1
data[1] => w_anode134w[2].IN1
enable => w_anode105w[1].IN0
enable => w_anode118w[1].IN0
enable => w_anode126w[1].IN0
enable => w_anode134w[1].IN0
eq[0] <= w_anode105w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode118w[2].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode126w[2].DB_MAX_OUTPUT_PORT_TYPE


|STEM|fill:D1|vga_adapter:VGA|altsyncram:VideoMemory|altsyncram_m6m1:auto_generated|mux_ifb:mux3
data[0] => data0_wire[0].IN0
data[1] => data0_wire[1].IN0
data[2] => data0_wire[2].IN0
data[3] => data1_wire[0].IN0
data[4] => data1_wire[1].IN0
data[5] => data1_wire[2].IN0
data[6] => data2_wire[0].IN0
data[7] => data2_wire[1].IN0
data[8] => data2_wire[2].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[2].IN0
sel[0] => data1_wire[2].IN1
sel[0] => data1_wire[1].IN1
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[2].IN1
sel[1] => data2_wire[1].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|STEM|fill:D1|vga_adapter:VGA|vga_pll:mypll
clock_in => clock_input_bus[0].IN1
clock_out <= altpll:altpll_component.clk


|STEM|fill:D1|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component
inclk[0] => altpll_80u:auto_generated.inclk[0]
inclk[1] => altpll_80u:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
clk[5] <= clk[5].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|STEM|fill:D1|vga_adapter:VGA|vga_pll:mypll|altpll:altpll_component|altpll_80u:auto_generated
clk[0] <= generic_pll1.O_OUTCLK
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
fbout <= generic_pll1.O_FBOUTCLK
inclk[0] => generic_pll1.I_REFCLK
inclk[1] => ~NO_FANOUT~
locked <= generic_pll1.LOCKED


|STEM|fill:D1|vga_adapter:VGA|vga_controller:controller
vga_clock => VGA_BLANK~reg0.CLK
vga_clock => VGA_VS~reg0.CLK
vga_clock => VGA_HS~reg0.CLK
vga_clock => VGA_BLANK1.CLK
vga_clock => VGA_VS1.CLK
vga_clock => VGA_HS1.CLK
vga_clock => yCounter[0].CLK
vga_clock => yCounter[1].CLK
vga_clock => yCounter[2].CLK
vga_clock => yCounter[3].CLK
vga_clock => yCounter[4].CLK
vga_clock => yCounter[5].CLK
vga_clock => yCounter[6].CLK
vga_clock => yCounter[7].CLK
vga_clock => yCounter[8].CLK
vga_clock => yCounter[9].CLK
vga_clock => xCounter[0].CLK
vga_clock => xCounter[1].CLK
vga_clock => xCounter[2].CLK
vga_clock => xCounter[3].CLK
vga_clock => xCounter[4].CLK
vga_clock => xCounter[5].CLK
vga_clock => xCounter[6].CLK
vga_clock => xCounter[7].CLK
vga_clock => xCounter[8].CLK
vga_clock => xCounter[9].CLK
vga_clock => VGA_CLK.DATAIN
resetn => xCounter[0].ACLR
resetn => xCounter[1].ACLR
resetn => xCounter[2].ACLR
resetn => xCounter[3].ACLR
resetn => xCounter[4].ACLR
resetn => xCounter[5].ACLR
resetn => xCounter[6].ACLR
resetn => xCounter[7].ACLR
resetn => xCounter[8].ACLR
resetn => xCounter[9].ACLR
resetn => yCounter[0].ACLR
resetn => yCounter[1].ACLR
resetn => yCounter[2].ACLR
resetn => yCounter[3].ACLR
resetn => yCounter[4].ACLR
resetn => yCounter[5].ACLR
resetn => yCounter[6].ACLR
resetn => yCounter[7].ACLR
resetn => yCounter[8].ACLR
resetn => yCounter[9].ACLR
pixel_colour[0] => VGA_B[0].DATAIN
pixel_colour[0] => VGA_B[9].DATAIN
pixel_colour[0] => VGA_B[8].DATAIN
pixel_colour[0] => VGA_B[7].DATAIN
pixel_colour[0] => VGA_B[6].DATAIN
pixel_colour[0] => VGA_B[5].DATAIN
pixel_colour[0] => VGA_B[4].DATAIN
pixel_colour[0] => VGA_B[3].DATAIN
pixel_colour[0] => VGA_B[2].DATAIN
pixel_colour[0] => VGA_B[1].DATAIN
pixel_colour[1] => VGA_G[0].DATAIN
pixel_colour[1] => VGA_G[9].DATAIN
pixel_colour[1] => VGA_G[8].DATAIN
pixel_colour[1] => VGA_G[7].DATAIN
pixel_colour[1] => VGA_G[6].DATAIN
pixel_colour[1] => VGA_G[5].DATAIN
pixel_colour[1] => VGA_G[4].DATAIN
pixel_colour[1] => VGA_G[3].DATAIN
pixel_colour[1] => VGA_G[2].DATAIN
pixel_colour[1] => VGA_G[1].DATAIN
pixel_colour[2] => VGA_R[0].DATAIN
pixel_colour[2] => VGA_R[9].DATAIN
pixel_colour[2] => VGA_R[8].DATAIN
pixel_colour[2] => VGA_R[7].DATAIN
pixel_colour[2] => VGA_R[6].DATAIN
pixel_colour[2] => VGA_R[5].DATAIN
pixel_colour[2] => VGA_R[4].DATAIN
pixel_colour[2] => VGA_R[3].DATAIN
pixel_colour[2] => VGA_R[2].DATAIN
pixel_colour[2] => VGA_R[1].DATAIN
memory_address[0] <= vga_address_translator:controller_translator.mem_address
memory_address[1] <= vga_address_translator:controller_translator.mem_address
memory_address[2] <= vga_address_translator:controller_translator.mem_address
memory_address[3] <= vga_address_translator:controller_translator.mem_address
memory_address[4] <= vga_address_translator:controller_translator.mem_address
memory_address[5] <= vga_address_translator:controller_translator.mem_address
memory_address[6] <= vga_address_translator:controller_translator.mem_address
memory_address[7] <= vga_address_translator:controller_translator.mem_address
memory_address[8] <= vga_address_translator:controller_translator.mem_address
memory_address[9] <= vga_address_translator:controller_translator.mem_address
memory_address[10] <= vga_address_translator:controller_translator.mem_address
memory_address[11] <= vga_address_translator:controller_translator.mem_address
memory_address[12] <= vga_address_translator:controller_translator.mem_address
memory_address[13] <= vga_address_translator:controller_translator.mem_address
memory_address[14] <= vga_address_translator:controller_translator.mem_address
VGA_R[0] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[1] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[2] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[3] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[4] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[5] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[6] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[7] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[8] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_R[9] <= pixel_colour[2].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[1] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[2] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[3] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[4] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[5] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[6] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[7] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[8] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_G[9] <= pixel_colour[1].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[0] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[1] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[2] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[3] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[4] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[5] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[6] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[7] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[8] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_B[9] <= pixel_colour[0].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS <= VGA_HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS <= VGA_VS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_BLANK <= VGA_BLANK~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_SYNC <= <VCC>
VGA_CLK <= vga_clock.DB_MAX_OUTPUT_PORT_TYPE


|STEM|fill:D1|vga_adapter:VGA|vga_controller:controller|vga_address_translator:controller_translator
x[0] => mem_address[0].DATAIN
x[1] => mem_address[1].DATAIN
x[2] => mem_address[2].DATAIN
x[3] => mem_address[3].DATAIN
x[4] => mem_address[4].DATAIN
x[5] => Add1.IN18
x[6] => Add1.IN17
x[7] => Add1.IN16
y[0] => Add0.IN14
y[0] => Add1.IN20
y[1] => Add0.IN13
y[1] => Add1.IN19
y[2] => Add0.IN11
y[2] => Add0.IN12
y[3] => Add0.IN9
y[3] => Add0.IN10
y[4] => Add0.IN7
y[4] => Add0.IN8
y[5] => Add0.IN5
y[5] => Add0.IN6
y[6] => Add0.IN3
y[6] => Add0.IN4
mem_address[0] <= x[0].DB_MAX_OUTPUT_PORT_TYPE
mem_address[1] <= x[1].DB_MAX_OUTPUT_PORT_TYPE
mem_address[2] <= x[2].DB_MAX_OUTPUT_PORT_TYPE
mem_address[3] <= x[3].DB_MAX_OUTPUT_PORT_TYPE
mem_address[4] <= x[4].DB_MAX_OUTPUT_PORT_TYPE
mem_address[5] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[6] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[7] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[8] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[9] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[10] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[11] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[12] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[13] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
mem_address[14] <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|STEM|hexDisplay:H0
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
light[0] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[3] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[4] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[5] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[6] <= light.DB_MAX_OUTPUT_PORT_TYPE


|STEM|hexDisplay:H1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
light[0] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[3] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[4] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[5] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[6] <= light.DB_MAX_OUTPUT_PORT_TYPE


|STEM|hexDisplay:H2
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
light[0] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[3] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[4] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[5] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[6] <= light.DB_MAX_OUTPUT_PORT_TYPE


|STEM|hexDisplay:H3
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
light[0] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[3] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[4] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[5] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[6] <= light.DB_MAX_OUTPUT_PORT_TYPE


|STEM|hexDisplay:H4
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[0] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[1] => light.IN1
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[2] => light.IN0
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
segment[3] => light.IN1
light[0] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[1] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[2] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[3] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[4] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[5] <= light.DB_MAX_OUTPUT_PORT_TYPE
light[6] <= light.DB_MAX_OUTPUT_PORT_TYPE


